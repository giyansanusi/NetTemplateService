<?xml version="1.0"?>
<configuration>

  <connectionStrings>
    <add name="TemplateDBConnectionString" connectionString="Data Source=SANUSI\SANUSI;Initial Catalog=TemplateDB;User ID=sa;Password=&quot;kronos 123&quot;"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="sanusiServiceBehavior">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <!--<serviceDebug includeExceptionDetailInFaults="false"/>-->
        </behavior>
      </serviceBehaviors>
    
      <endpointBehaviors>
        <behavior name="RESTbehavior">
          <webHttp/>
        </behavior>
      </endpointBehaviors>
    
    </behaviors>
    
    <services>
      <!-- penjelasan properti pada tag service-->
      <!-- name = 'Nama_solution'.'nama_file_SVC'  -->
      <!-- behaviorConfiguration = diisi nama behavior pada tag behavior, kalau belum ada nama nya. kasih id name di tag nya trus namain -->
       <service name="NetTemplateService.NettemplateService" behaviorConfiguration="sanusiServiceBehavior">
         <!-- penjelasan properti pada tag endpoint-->
         <!-- contract = 'Nama_solution'.'nama_interface' -->
         
         <!--contoh 1, menggunakan basicHttpBinding. Memiliki perilaku yang sama seperti webservice ASMX.-->
         <!--Note : ASMX webservice sudah jarang digunakan untuk aplikasi baru-->
         <endpoint name="ASMXendpoint" address="/ASMXendpoint" binding="basicHttpBinding" contract="NetTemplateService.INettemplateService"/> <!--ASMX endpoint--> 
         
         <!--contoh 2, RESTful service. menggunakan webHttpBinding. dapat mengembaikan nilai dalam bentuk XML atau JSON-->
         <endpoint name="RESTendpoint" address="/RESTendpoint" binding="webHttpBinding" contract="NetTemplateService.INettemplateService" behaviorConfiguration="RESTbehavior"/> <!--REST endpoint-->
          
         <!-- bagian mex di bawah ini udah default, memang harus gitu. tapi VS ga nge generate, tetep harus di tambahin -->
          <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
       
          <host>
            <baseAddresses>   
              <add baseAddress="http://localhost:65189/NettemplateService.svc"/>
            </baseAddresses>     
          </host>
          
       </service>
    </services>  
    
    <protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
